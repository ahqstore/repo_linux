{"appId":"com.termux.gui","appShortcutName":"Termux:GUI","appDisplayName":"Termux:GUI","authorId":"fdroid","releaseTagName":"","downloadUrls":{"1":{"installerType":"AndroidApkZip","asset":"","url":"https://github.com/Tarek Sander/https://github.com/termux/termux-gui/releases/download//"}},"install":{"win32":null,"winarm":null,"linux":null,"linuxArm64":null,"linuxArm7":null,"android":{"assetId":1,"min_sdk":24,"abi":["Aarch64","Armv7","X86","X64"]}},"displayImages":[],"description":"A plugin for Termux to use the Android GUI from terminal applications.\nWith this plugin you can make GUI applications in <a href=\"https://f-droid.org/en/packages/com.termux/\">Termux</a> without using VNC or a X11 server.\nThis plugin uses the native Android GUI components to display everything.\nThat means it seamlessly integrates into the Android experience, but standard applications written for X11 don't work.\nAlso it requires a minimum of knowledge of how the Android GUI works.\nSee <a href=\"https://github.com/termux/termux-gui/blob/main/README.md\">the README</a> for a crash course.\n\nFeatures:\n* Display content in a task with its own back stack\n* Display custom dialogs\n* If you want you can also display on the lockscreen\n* Create your own homescreen widgets\n* Use <a href=\"https://developer.android.com/guide/topics/ui/picture-in-picture\">picture-in-picture mode</a>\n* Get events from the UI and change the content on-the-fly\n* Draw to a buffer on the screen directly\n\n\nUsing the plugin:\n\n<a href=\"https://github.com/tareksander/termux-gui-package\">There are also prepackaged programs you can use.</a>\n\nThere are currently <a href=\"https://github.com/tareksander/termux-gui-python-bindings\">Python bindings</a>, <a href=\"https://github.com/tareksander/termux-gui-c-bindings\">C bindings</a> and a <a href=\"https://github.com/tareksander/termux-gui-bash\">Bash library</a>, and the <a href=\"https://github.com/termux/termux-gui/blob/main/Protocol.md\">protocol</a> used is fully documented.\nImplementing the protocol only requires the ability to use unix sockets, JSON handling and reading and writing 4 byte big endian integers.\nThe python bindings should provide further clarification in case the protocol didn't specify something.\nThe python bindings also have a tutorial.\n\n\n\n","repo":{"author":"Tarek Sander","repo":"https://github.com/termux/termux-gui"},"version":"f9bcb38c65a193da2b307385a55ab86632c4f9c1abd5250a0e1a8bd21145013f","site":null,"source":"https://github.com/termux/termux-gui","license_or_tos":"GPL-3.0-only","resources":null,"verified":false}