{"appId":"rocks.mm_dev.BendyStraw","appShortcutName":"BendyStraw","appDisplayName":"BendyStraw","authorId":"fdroid","releaseTagName":"","downloadUrls":{"1":{"installerType":"AndroidApkZip","asset":"","url":"https://github.com/mm-dev/https://codeberg.org/mm-dev/bendy-straw/releases/download//"}},"install":{"win32":null,"winarm":null,"linux":null,"linuxArm64":null,"linuxArm7":null,"android":{"assetId":1,"min_sdk":21,"abi":["Aarch64"]}},"displayImages":[],"description":"An app for managing NewPipe databases\n# BendyStraw\n\nAn app for managing <strong>NewPipe</strong> databases.\n\n<strong>BendyStraw</strong> imports [ NewPipeData-*.zip ] files and lets you:\n\n<ul>\n  <li>Open multiple [ zip ]s at the same time, so you can combine data from several devices</li>\n  <li>[ Delete ] [ Copy ] [ Move ] [ Rename ] your custom playlists</li>\n  <li>[ Delete ] [ Copy ] [ Move ] streams from one playlist to another</li>\n  <li>[ Delete ] [ Copy ] [ Move ] channel subscriptions between databases</li>\n  <li>[ Delete ] [ Copy ] [ Move ] remote (bookmarked) playlists</li>\n  <li>Re-order playlists, sorting the streams by [ Title ], [ Channel ] or [ Length ] (just tap the column headings in the tables)</li>\n  <li>Shuffle or reverse playlists</li>\n  <li>Streams (audio/video) can be opened directly from <strong>BendyStraw</strong>, as the URLs are clickable\n    <ul>\n      <li>If you set video links (in your Android settings) to open in <strong>NewPipe</strong> you can make a split-screen view and jump around your playlists</li>\n    </ul>\n  </li>\n  <li>Export playlist as raw text, for example to be used with <a href=\"https://github.com/yt-dlp/yt-dlp\">yt-dlp</a></li>\n  <li><strong>New!</strong> Import playlists from JSON (the button to do this is hidden by default, go to the settings menu to show it)</li>\n  <li><strong>New!</strong> Open as a temporary YouTube playlist in your browser (the button to do this is hidden by default, go to the settings menu to show it)</li>\n  <li>Dark/light themes</li>\n</ul>\n\nAfter editing simply export a new [ zip ] file, then import it back into <strong>NewPipe</strong>.\n\n\n\n## Note about Permissions\n\nOn Android 13+, <strong>BendyStraw</strong> asks for the <em>manage external storage</em> permission, here's why:\n\n<ul>\n  <li>\n    A typical use-case for this app is to open several [ zip ] files, concurrently, from multiple locations including [ Download ] directories (these files would be, for example, multiple <strong>NewPipe</strong> exports from multiple devices, which you want to combine).\n  </li>\n  <li>\n    Each [ zip ] is extracted so that its contained [ newpipe.db ] SQLite database can be read/written while you are editing.\n  </li>\n  <li>\n    After editing, the extracted files are written back to a new [ zip ], and/or overwrite the original [ zip ]s.\n  </li>\n</ul>\n\n\n<strong>I aim to minimise the permissions I request in everything I build</strong>. Android 13 introduced changes to make doing what I decribed above difficult. I explored alternative methods requiring fewer permissions and felt that it compromised the user experience for my (as the app's first user) typical usage, making it more complicated and annoying.\n\n\nI treat users as responsible human beings, so give you this info to allow you to make an informed choice. If you are not happy with this, you can:\n\n<ul>\n  <li>Choose not to grant the permission, and uninstall the app.</li>\n  <li>\n    Check the source code to see that I'm not doing anything nefarious, or ask somebody to check it for you (at time of writing, everything related to reading/writing files is in [ /lib/file_manager_widget.dart ]).\n  </li>\n  <li>\n    Build the app yourself from the source using <strong>Flutter</strong>.\n  </li>\n</ul>\n","repo":{"author":"mm-dev","repo":"https://codeberg.org/mm-dev/bendy-straw"},"version":"794190e42fc8b2fb4fec7ba0830df3f00c59f5687f98a0077756e0a51f0cf7d0","site":null,"source":"https://codeberg.org/mm-dev/bendy-straw","license_or_tos":"GPL-3.0-only","resources":null,"verified":false}